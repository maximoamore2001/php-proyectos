{"ast":null,"code":"var _jsxFileName = \"/Users/nelson/my-app/src/Formulario.js\";\nimport React, { useState, useEffect } from 'react';\nimport InputText from './InputText.js';\nimport Desplegable from './Desplegable.js';\nimport TextArea from './TextArea.js';\nimport { obtenerAsuntos, guardarCliente } from \"./services\"; //Toma por defecto el index.js\n\nfunction Formulario() {\n  const [asuntos, setAsuntos] = useState([]);\n  const [usuario, setUsuario] = useState({});\n  useEffect(() => {\n    // Lo ejecuta cuando carga la aplicacion la primera vez\n    (async () => {\n      const data = await obtenerAsuntos(); //Accedo a los datos que vienen del json\n\n      setAsuntos(data);\n    })();\n  }, []);\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let config = {\n        method: 'POST',\n        header: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.form)\n      };\n      let res = await fetch(`${url}/exercises`, config); //Si no se especifica el 2do parametro se hace un GET, en cambio si se especifica, hace un POST\n\n      let json = await res.json();\n      this.setState({\n        loading: false\n      });\n      this.props.histoy.push('/exercise'); //Redirect\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Datos personales\"), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    id: \"txtNombre\",\n    titulo: \"Nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputText, {\n    id: \"txtTelefono\",\n    titulo: \"Telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputText, {\n    id: \"txtCorreo\",\n    titulo: \"Correo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Desplegable, {\n    id: \"lstAsunto\",\n    fuente: asuntos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    id: \"txtMensaje\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"my-5 btn-lg btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Enviar\")));\n}\n\nexport default Formulario;","map":{"version":3,"sources":["/Users/nelson/my-app/src/Formulario.js"],"names":["React","useState","useEffect","InputText","Desplegable","TextArea","obtenerAsuntos","guardarCliente","Formulario","asuntos","setAsuntos","usuario","setUsuario","data","handleSubmit","e","preventDefault","config","method","header","body","JSON","stringify","state","form","res","fetch","url","json","setState","loading","props","histoy","push","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,YAA/C,C,CAA6D;;AAE7D,SAASC,UAAT,GAAsB;AAElB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,KAAC,YAAY;AACT,YAAMW,IAAI,GAAG,MAAMP,cAAc,EAAjC,CADS,CAC4B;;AACrCI,MAAAA,UAAU,CAACG,IAAD,CAAV;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOAC,EAAAA,YAAY,GAAG,MAAMC,CAAN,IAAW;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,UAAIC,MAAM,GAAG;AACTC,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,MAAM,EAAE;AACJ,oBAAU,kBADN;AAEJ,0BAAgB;AAFZ,SAFC;AAMTC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,IAA1B;AANG,OAAb;AASA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,GAAI,YAAR,EAAqBV,MAArB,CAArB,CAVA,CAUkD;;AAClD,UAAIW,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,EAAjB;AAEA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAIA,WAAKC,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB,WAAvB,EAjBA,CAiBqC;AACxC,KAlBD,CAkBE,OAAOC,KAAP,EAAc;AACZ,WAAKL,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,KADC;AAEVI,QAAAA;AAFU,OAAd;AAIH;AACJ,GA1BD;;AA2BI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,MAAM,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,WAAd;AAA0B,IAAA,MAAM,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,aAAd;AAA4B,IAAA,MAAM,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,WAAd;AAA0B,IAAA,MAAM,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,WAAhB;AAA4B,IAAA,MAAM,EAAEzB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CAFJ,CADJ;AAaP;;AACD,eAAeD,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport InputText from './InputText.js';\nimport Desplegable from './Desplegable.js';\nimport TextArea from './TextArea.js';\nimport { obtenerAsuntos, guardarCliente } from \"./services\"; //Toma por defecto el index.js\n\nfunction Formulario() {\n\n    const [asuntos, setAsuntos] = useState([]);\n    const [usuario, setUsuario] = useState({});\n\n    useEffect(() => { // Lo ejecuta cuando carga la aplicacion la primera vez\n        (async () => {\n            const data = await obtenerAsuntos(); //Accedo a los datos que vienen del json\n            setAsuntos(data);\n        })()\n    }, []);\n\n    handleSubmit = async e => {   \n        e.preventDefault();\n        try {\n            let config = {\n                method: 'POST',\n                header: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(this.state.form)\n            }\n\n            let res = await fetch(`${url}/exercises`, config) //Si no se especifica el 2do parametro se hace un GET, en cambio si se especifica, hace un POST\n            let json = await res.json();\n\n            this.setState({\n                loading: false\n            });\n\n            this.props.histoy.push('/exercise'); //Redirect\n        } catch (error) {\n            this.setState({\n                loading: false,\n                error\n            })\n        }\n    }\n        return (\n            <div>\n                <h1>Datos personales</h1>\n                <form method=\"POST\" action=\"\">\n                    <InputText id=\"txtNombre\" titulo=\"Nombre\" />\n                    <InputText id=\"txtTelefono\" titulo=\"Telefono\" />\n                    <InputText id=\"txtCorreo\" titulo=\"Correo\" />\n                    <Desplegable id=\"lstAsunto\" fuente={asuntos} />\n                    <TextArea id=\"txtMensaje\" />\n                    <button type=\"submit\" className=\"my-5 btn-lg btn-primary\" >Enviar</button>\n                </form >\n            </div>\n        );\n}\nexport default Formulario;\n"]},"metadata":{},"sourceType":"module"}